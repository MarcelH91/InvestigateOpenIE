''Django'' is a free and open source web application framework, written in Python (programming language), which follows the model–view–controller Architectural pattern (computer science). It is maintained by the Django Software Foundation (DSF), an independent organization established as a 501(c)(3) non-profit.

Django's primary goal is to ease the creation of complex, database-driven websites. Django emphasizes reusability and "pluggability" of components, rapid development, and the principle of don't repeat yourself. Python is used throughout, even for settings, files, and data models.  Django also provides an optional administrative create, read, update and delete interface that is generated dynamically through Introspection (computer science) introspection and configured via admin models.

Some well-known sites that use Django include Pinterest, Instagram, Mozilla Foundation, The Washington Times, Disqus, and the Public Broadcasting Service.

Django was born in the fall of 2003, when the web programmers at the ''Lawrence Journal-World'' newspaper, Adrian Holovaty and Simon Willison, began using Python to build applications. It was released publicly under a BSD license in July 2005. The framework was named after guitarist Django Reinhardt.

In June 2008, it was announced that a newly formed Django Software Foundation (DSF) would maintain Django in the future.

Despite having its own nomenclature, such as naming the callable objects generating the response "views", the core Django framework can be seen as MVC. It consists of an object-relational mapping object-relational mapper which mediates between data modeling (defined as Python classes) and a relational database ("Model");  a system for processing requests with a web template system ("View") and a regular-expression-based Uniform Resource Locator dispatcher ("Controller").

Also included in the core framework are a lightweight and standalone web server for development and testing, a form serialization and validation system which can translate between HTML forms and values suitable for storage in the database, a template system that utilizes the concept of Inheritance (object-oriented programming) borrowed from object-oriented programming, a Web cache framework which can use any of several cache methods, support for middleware classes which can intervene at various stages of request processing and carry out custom functions, an internal dispatcher system which allows components of an application to communicate events to each other via pre-defined signals, an Internationalization and localization system, including translations of Django's own components into a variety of languages, a serialization system which can produce and read XML and/or JSON representations of Django model instances, a system for extending the capabilities of the template engine and an interface to Python's built in unit test framework.

The main Django distribution also bundles a number of applications in its "contrib" package, including an extensible authentication system, the dynamic administrative interface, tools for generating RSS (file format) and Atom syndication feeds, a sites framework that allows one Django installation to run multiple websites, each with their own content and applications tools for generating Google Sitemaps, built-in mitigation for cross-site request forgery, cross-site scripting, SQL injection, password cracking and other typical web attacks, most of them turned on by default and a framework for creating Geographic information system GIS applications.

Django's configuration system allows third party code to be plugged in a regular project, provided they follow the reusable app conventions. More than 2500 packages are available to extend the framework original behavior, providing solutions to issues the original tool didn't: registration, search, Application Programming Interface provision and consumption, Content Management System, etc.

This extensibility is, however, mitigated by internal components dependencies on each others. While Django philosophy implies loose coupling, the template filters and tags assume one engine implementation, and both the auth and admin bundled applications require the use of the internal ORM. None of them are mandatory to run a Django project, but reusable apps tends to depend on them, encouraging the developers to keep using the official stack in order to benefit fully from the apps ecosystem.

Django can be run in conjunction with Apache HTTP Server, NGINX using Web Server Gateway Interface, Gunicorn, or Cherokee (Webserver) using flup (a Python module). Django also includes the ability to launch a FastCGI server, enabling use behind any web server which supports FastCGI, such as Lighttpd or Hiawatha (web server). It is also possible to use other Web Server Gateway Interface compliant web servers. Django officially supports four database backends: PostgreSQL, MySQL, SQLite, and Oracle Database. Microsoft SQL Server can be used with django-mssql but only in Microsoft operating systems, while similarly external backends exist for IBM DB2, SQL Anywhere and Firebird. There is a Fork (software development) named django-nonrel which supports NoSQL (concept) databases, such as MongoDB and Google App Engine's Datastore.

Django may also be run in conjunction with Jython on any Java EE application server such as GlassFish or JBoss. In this case django-jython must be installed in order to provide JDBC drivers for database connectivity, which also provides functionality to compile Django in to a .war suitable for deployment.

Google App Engine includes support for Django version 1.x.x as one of the bundled frameworks.

There is a semiannual conference for Django developers and users, named "DjangoCon", that has been held since September 2008. DjangoCon is held annually in Europe, in May or June; while another is held in the United States in September, usually in Portland, Oregon. The 2012 DjangoCon took place in Washington D.C from 3 to 8 September. 2013 DjangoCon was held in Chicago at the Hyatt Regency Hotel and the post-conference Sprints were hosted at Digital Bootcamp, computer training center.

Django mini-conferences were held in Hobart, Australia in July 2013 and Brisbane, Australia in August 2014.