Ruby on Rails, or simply Rails, is an open source web application framework written in Ruby (programming language). Rails is a Solution full-stack framework that emphasizes the use of well-known software engineering software design pattern and paradigms, including convention over configuration (CoC), don't repeat yourself (DRY), the active record pattern,  and model–view–controller (MVC).

David Heinemeier Hansson extracted Ruby on Rails from his work on Basecamp Classic Basecamp, a project management tool by 37signals (now a web application company).

Hansson first released Rails as open source in July 2004, but did not share Commit (data management) rights to the project until February 2005.

Rails version 2.3 was released on March 15, 2009 with major new developments in templates, engines, Rack (web server interface) and nested model forms. Templates enable the developer to generate a skeleton application with custom RubyGems and configurations. Engines give developers the ability to reuse application pieces complete with routes, view paths and models. The Rack web server interface and Metal allow one to write optimized pieces of code that route around ActionController.

On December 23, 2008, Merb, another web application framework, was launched, and Ruby on Rails announced it would work with the Merb project to bring "the best ideas of Merb" into Rails 3, ending the "unnecessary duplication" across both communities. Merb was merged with Rails as part of the Rails 3.0 release. 

Rails 3.1 was released on August 31, 2011, featuring Reversible Database Migrations, Asset Pipeline, Streaming, jQuery as default JavaScript library and newly introduced CoffeeScript and Sass (stylesheet language) into the stack.

Rails 3.2 was released on January 20, 2012 with a faster development mode and routing engine (also known as Journey engine), Automatic Query Explain and Tagged Logging. Rails 3.2.x is the last version that supports Ruby 1.8.7. Rails 3.2.12 supports Ruby 2.0.

Rails 4.0 was released on June 25, 2013, introducing Russian Doll Caching, Turbolinks, Live Streaming as well as making Active Resource, Active Record Observer and other components optional by splitting them as gems.

Rails 4.1 was released on April 8, 2014, introducing Spring, Variants, Enums, Mailer previews, and secrets.yml.

Rails 4.2 was released on December 19, 2014, introducing Active Job, asynchronous emails, Adequate Record, Web Console and foreign keys.

Like many web frameworks, Ruby on Rails uses the model–view–controller (MVC) pattern to organize application programming.

In a default configuration, a model in the Ruby on Rails framework maps to a table in a database, and a Ruby file. For example, a model class User will usually be defined in the file user.rb in the app/models directory, and is linked to the table users in the database. Developers can choose any model name, file name or database table name. But this is not common practice and usually discouraged according to the "convention over configuration" philosophy.

A controller is a component of Rails that responds to external requests from the web server to the application by determining which view file to render. The controller may also have to query one or more models directly for information and pass these on to the view. A controller may provide one or more actions. In Ruby on Rails, an action is typically a basic unit that describes how to respond to a specific external web-browser request. Also note that the controller/action will be accessible for external web requests only if a corresponding route is mapped to it. Rails encourages developers to use Representational state transfer RESTful routes, which include actions such as: create, new, edit, update, destroy, show, and index. These mappings of incoming requests/routes to controller actions can be easily set up in the routes configuration file.

A view in the default configuration of Rails is an ERB-Templating, which is compiled to HTML at run-time. Many other templating systems can be used for views.

Ruby on Rails includes tools that make common development tasks easier "out of the box", such as Scaffold (programming), that can automatically construct some of the models and views needed for a basic website. There were quite a few changes in the 2.0 release, including the way that Ruby on Rails generates scaffolding code. Also included are WEBrick, a simple Ruby web server that is distributed with Ruby, and Rake (software), a build system, distributed as a RubyGems. Together with Ruby on Rails, these tools provide a basic development environment.

Ruby on Rails is most commonly not connected to the Internet directly, but through some front-end web server. Mongrel (web server) was generally preferred over WEBrick in the early days, but it can also run on Lighttpd, Apache (web server), Cherokee (Webserver), Hiawatha (web server), nginx (either as a module — Phusion Passenger for example — or via Common Gateway Interface, FastCGI or mod_ruby), and many others. From 2008 onwards, the Passenger web server replaced Mongrel as the most-used web server for Ruby on Rails. Ruby is also supported natively on the IBM i.

Ruby on Rails is also noteworthy for its extensive use of the JavaScript libraries Prototype JavaScript Framework and Script.aculo.us for Ajax (programming). Ruby on Rails includes the Prototype JavaScript framework and the Scriptaculous JavaScript controls and visual effects library. Ruby on Rails initially utilized lightweight SOAP for web services; this was later replaced by Representational State Transfer (RESTful) web services. Ruby on Rails 3.0 uses a technique called Unobtrusive JavaScript to separate the functionality (or logic) from the structure of the web page. jQuery is fully supported as a replacement for Prototype JavaScript Framework Prototype and is the default JavaScript library in Rails 3.1, reflecting an industry-wide move towards jQuery. Additionally, CoffeeScript was introduced in Rails 3.1 as the default Javascript language.

Since version 2.0, Ruby on Rails offers both HTML and XML as standard output formats. The latter is the facility for RESTful web services.

Rails 3.1 introduced Sass as standard CSS templating.

By default, the server uses ERuby (Embedded Ruby) in the HTML views, with files having an html.erb extension.  Rails supports swapping-in alternative templating languages, such as HAML and Mustache (template system).

Ruby on Rails 3.0 has been designed to work with Ruby 1.8.7, Ruby 1.9.2, and JRuby 1.5.2+; earlier versions are not supported.

Rails 3.2 series is the last series to support Ruby 1.8.7.

Ruby on Rails is separated into various packages, namely ActiveRecord (Rails) (an object-relational mapping system for database access), ActiveResource (provides web services), ActionPack, ActiveSupport and ActionMailer. Prior to version 2.0, Ruby on Rails also included the Action Web Service package that is now replaced by Active Resource. Apart from standard packages, developers can make Plug-in (computing) to extend existing packages. Rails 3.2 deprecates the old plugins Rails 2-3-stable style in which plugins are to be placed under vendor/plugins, in favor of packaged gems.

Ruby on Rails is often installed using RubyGems, a package manager, which is included with current versions of Ruby. Many free Unix-like systems also support installation of Ruby on Rails and its dependencies through their native package management system.

Ruby on Rails is typically deployed with a database server such as MySQL or PostgreSQL, and a web server such as Apache HTTP Server running the Phusion Passenger module.

Ruby on Rails is intended to emphasize ''Convention over Configuration'' (CoC), and the ''Don't Repeat Yourself'' (DRY) principle.

"Convention over Configuration" means a developer only needs to specify unconventional aspects of the application. For example, if there is a class ''Sale'' in the model, the corresponding table in the database is called ''sales'' by default. It is only if one deviates from this convention, such as calling the table "products sold", that the developer needs to write code regarding these names. Generally, Ruby on Rails conventions lead to less code and less repetition.

"Don't repeat yourself" means that information is located in a single, unambiguous place. For example, using the ActiveRecord (Rails) ActiveRecord module of Rails, the developer does not need to specify database column names in class definitions. Instead, Ruby on Rails can retrieve this information from the database based on the class name.

"Fat models, skinny controllers" means that most of the application logic should be placed within the model while leaving the controller as light as possible.

Rails running on Matz's Ruby Interpreter (the ''de facto'' reference interpreter for Ruby) had been criticized for issues with scalability.

In 2011, Gartner Research noted that despite criticisms and comparisons to Java, many high-profile consumer web firms are using Ruby on Rails to build Agile software development, scalable web applications.  Some of the largest sites running Ruby on Rails include GitHub, Yammer, Scribd, Shopify, Hulu, and Basecamp Classic.

On September 24, 2013, a session cookie persistence security flaw was reported in Ruby on Rails. In a default configuration, the entire session hash is stored within a session cookie known as CookieStore, allowing any authenticated session possessing the session cookie to log in as the target user at any time in the future. As a workaround, administrators are advised to configure cookies to be stored on the server using mechanisms such as ActiveRecordStore.